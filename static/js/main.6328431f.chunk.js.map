{"version":3,"sources":["Clock/Clock.js","Login/Login.js","TodoList/TodoLists.js","TodoList/TodoList.js","Quote/Quote.js","Weather/Weather.js","App.js","index.js"],"names":["getCurrentTime","date","Date","hours","String","getHours","padStart","minutes","getMinutes","seconds","getSeconds","Clock","useState","time","setTime","useEffect","setInterval","id","Login","localStorage","getItem","username","setUsername","text","setText","required","maxLength","type","placeholder","onChange","e","target","value","onClick","preventDefault","setItem","handleLoginSubmit","TodoLists","todos","deleteTodo","map","todo","className","TodoList","JSON","parse","setTodos","input","setInput","stringify","onSubmit","newTodoObj","now","saveTodos","console","log","parentNode","filter","quotes","quote","author","findRandomNumber","arrLength","Math","floor","random","Quote","randomNumber","length","todaysQuote","exports","Weather","city","setCity","weather","setWeather","temperature","setTemperature","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","url","fetch","then","response","json","data","name","sys","country","main","temp","fetchData","alert","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6328431f.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction getCurrentTime() {\n  const date = new Date();\n  const hours = String(date.getHours()).padStart(2, \"0\");\n  const minutes = String(date.getMinutes()).padStart(2, \"0\");\n  const seconds = String(date.getSeconds()).padStart(2, \"0\");\n  const currentTime = `${hours}:${minutes}:${seconds}`;\n  return currentTime;\n}\nfunction Clock() {\n  const [time, setTime] = useState(getCurrentTime());\n\n  useEffect(() => {\n    setInterval(() => {\n      setTime(getCurrentTime());\n    }, 1000);\n  });\n  return (\n    <div data-testid=\"clock\" id=\"clock\">\n      {time}\n    </div>\n  );\n}\n\nexport default Clock;\n","import React, { useState } from \"react\";\n\nfunction Login() {\n  const [username, setUsername] = useState(localStorage.getItem(\"username\"));\n  const [text, setText] = useState(\"\");\n\n  function handleLoginSubmit(text) {\n    setUsername(text);\n    setText(\"\");\n    localStorage.setItem(\"username\", text);\n  }\n\n  return (\n    <div id=\"login\">\n      {localStorage.getItem(\"username\") ? (\n        <h1 id=\"saluting\">Salut, {username}</h1>\n      ) : (\n        <form>\n          <input\n            data-testid=\"login-input\"\n            id=\"login-input\"\n            required\n            maxLength=\"15\"\n            type=\"text\"\n            placeholder=\"Hello, Who are you?\"\n            onChange={(e) => setText(e.target.value)}\n          />\n          <button\n            data-testid=\"login-button\"\n            id=\"login-button\"\n            onClick={(e) => {\n              e.preventDefault();\n              //   console.log(text);\n              handleLoginSubmit(text);\n            }}\n          >\n            Log in\n          </button>\n        </form>\n      )}\n    </div>\n  );\n}\n\nexport default Login;\n","import React from \"react\";\n\nfunction TodoLists({ todos, deleteTodo }) {\n  return (\n    <div id=\"todo-ul\">\n      <ul>\n        {todos.map((todo) => (\n          <li key={todo.id} id={todo.id} className=\"todo-li\">\n            {todo[\"todo\"]}\n            <button\n              className=\"todo-button\"\n              onClick={(e) => {\n                deleteTodo(e);\n              }}\n            >\n              x\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default TodoLists;\n","import React, { useState, useEffect } from \"react\";\nimport TodoLists from \"./TodoLists\";\n\nfunction TodoList() {\n  const [todos, setTodos] = useState(\n    () => JSON.parse(localStorage.getItem(\"todos\")) || []\n  );\n  const [input, setInput] = useState(\"\");\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  function saveTodos(todos) {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }\n\n  function deleteTodo(e) {\n    console.log(e.target.parentNode.id);\n    const id = e.target.parentNode.id;\n    setTodos(todos.filter((todo) => todo.id !== id));\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }\n\n  function handleTodoSubmit(e) {\n    e.preventDefault();\n    const newTodoObj = { id: String(Date.now()), todo: input };\n    setTodos([...todos, newTodoObj]);\n    saveTodos(todos);\n    setInput(\"\");\n    // setInput(\"\");\n    //  // Through this code, I should be able to remove the content of the input,\n    // but it does not work. I don't know why. probably, we should put this function on a button after making a button?\n  }\n\n  return (\n    <div>\n      <form onSubmit={handleTodoSubmit}>\n        <input\n          id=\"todo-input\"\n          type=\"text\"\n          placeholder=\"Write What to do and Press Enter.\"\n          required\n          onChange={(e) => {\n            setInput(e.target.value);\n          }}\n        />\n      </form>\n\n      <TodoLists todos={todos} deleteTodo={deleteTodo} />\n    </div>\n  );\n}\n\nexport default TodoList;\n","import React from \"react\";\n\nconst quotes = [\n  { quote: \"The purpose of our lives is to be happy.\", author: \"Dalai Lama\" },\n  {\n    quote:\n      \"If you want to live a happy life, tie it to a goal, not to people or things.\",\n    author: \"Albert Einstein\",\n  },\n  {\n    quote:\n      \"Life is not a problem to be solved, but a reality to be experienced.\",\n    author: \"Soren Kierkegaard\",\n  },\n  {\n    quote:\n      \"Everything negative – pressure, challenges – is all an opportunity for me to rise.\",\n    author: \"Kobe Bryant\",\n  },\n  {\n    quote:\n      \"Life is never easy. There is work to be done and obligations to be met – obligations to truth, to justice, and to liberty.\",\n    author: \"John F. Kennedy\",\n  },\n  {\n    quote:\n      \"Your work is going to fill a large part of your life, and the only way to be truly satisfied is to do what you believe is great work. And the only way to do great work is to love what you do. If you haven’t found it yet, keep looking. Don’t settle. As with all matters of the heart, you’ll know when you find it.\",\n    author: \"Steve Jobs\",\n  },\n  {\n    quote:\n      \"My mama always said, life is like a box of chocolates. You never know what you’re gonna get.\",\n    author: \"Forrest Gump\",\n  },\n  { quote: \"Keep calm and carry on.\", author: \"Winston Churchill\" },\n  {\n    quote:\n      \"Good friends, good books, and a sleepy conscience: this is the ideal life.\",\n    author: \"Mark Twainv\",\n  },\n  {\n    quote:\n      \"If you can do what you do best and be happy, you’re further along in life than most people.\",\n    author: \"Leonardo DiCaprio\",\n  },\n];\n\nconst findRandomNumber = (arrLength) => {\n  return Math.floor(Math.random() * arrLength);\n};\n\nfunction Quote() {\n  const randomNumber = findRandomNumber(quotes.length);\n  const todaysQuote = quotes[randomNumber];\n\n  return (\n    <div id=\"quote\">\n      <span>\n        {todaysQuote[\"quote\"]} - {todaysQuote[\"author\"]}\n      </span>\n    </div>\n  );\n}\n\nexport default Quote;\n\nexports.findRandomNumber = findRandomNumber;\n","import React, { useState } from \"react\";\n\nfunction Weather() {\n  const [city, setCity] = useState(\"\");\n  const [weather, setWeather] = useState(\"\");\n  const [temperature, setTemperature] = useState(\"\");\n\n  function fetchData(url) {\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setCity(`${data.name}, ${data.sys.country}`);\n        setWeather(`${data.weather[0].main}`);\n        setTemperature(`${data.main.temp}`);\n      });\n  }\n\n  function handleCurrentLocationOk(position) {\n    const latitude = position.coords.latitude;\n    const longitude = position.coords.longitude;\n\n    const API_KEY = \"f7fe21bbdb94774cf7eff66143dc833d\";\n    const url = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${API_KEY}&units=metric`;\n    fetchData(url);\n  }\n\n  function handleCurrentLocationError() {\n    alert(\"Can't find you. No weather for you.\");\n  }\n\n  navigator.geolocation.getCurrentPosition(\n    handleCurrentLocationOk,\n    handleCurrentLocationError\n  );\n\n  return (\n    <div id=\"weather\">\n      {city ? (\n        <span>\n          {temperature} ℃, {weather} in {city}\n        </span>\n      ) : null}\n    </div>\n  );\n}\n\nexport default Weather;\n\n// - npm i gh-pages 실행\n// - package.json에 \"homepage\" : \"https://voicihojun.github.io/movie_app_02\" 를 추가한다.\n\n// - npm run build를 실행한다. (아마도 이 과정은 생략가능)\n// - build 폴더가 생성된 것을 확인한다(최소화된 파일들) (생략가능 : 왜냐하면 아래서 npm deploy 하는 순간 위의 부분이 실행되기 때문)\n\n// - package.json의 script에 \"deploy\" : \"gh-pages -d build\" 추가(생성된 빌드 폴더를 deploy 한다는 뜻으로 build 폴더 이름이 다르다면 그것에 맞춰서 설정해야 함.)\n// - package.json의 script에 \"predeploy\" : \"npm run build\"\n// - 위의 과정을 설명하자면, npm run deploy를 실행시, predeploy의 npm run build가 실행되고 \"react-scripts build\"에 의해서 build 파일이 생성된다. 그리고 deploy의 명령어에 따라 gh-pages로 생성된 build 파일을 deploy한다.\n","import \"./App.css\";\nimport React from \"react\";\nimport Clock from \"./Clock/Clock\";\nimport Login from \"./Login/Login\";\nimport TodoList from \"./TodoList/TodoList\";\nimport Quote from \"./Quote/Quote\";\nimport Weather from \"./Weather/Weather\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div id=\"todo-container\">\n        <h1 id=\"title\">TODO</h1>\n        <Clock />\n        <Login />\n        <TodoList />\n        <Weather />\n        <Quote />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}