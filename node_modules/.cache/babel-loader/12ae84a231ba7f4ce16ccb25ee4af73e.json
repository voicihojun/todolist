{"ast":null,"code":"var _jsxFileName = \"/Users/hojunhwang/Documents/gitfth/learning_react/todolist/src/Weather/Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Weather() {\n  _s();\n\n  const [city, setCity] = useState(\"\");\n  const [weather, setWeather] = useState(\"\");\n  const [temperature, setTemperature] = useState(\"\");\n\n  function handleCurrentLocationOk(position) {\n    const latitude = position.coords.latitude;\n    const longitude = position.coords.longitude;\n    const API_KEY = \"f7fe21bbdb94774cf7eff66143dc833d\";\n    const url = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${API_KEY}&units=metric`;\n    fetch(url).then(response => response.json()).then(data => {\n      setCity(`${data.name}, ${data.sys.country}`);\n      setWeather(`${data.weather[0].main}`);\n      setTemperature(`${data.main.temp}`);\n    });\n  }\n\n  function handleCurrentLocationError() {\n    alert(\"Can't find you. No weather for you.\");\n  }\n\n  navigator.geolocation.getCurrentPosition(handleCurrentLocationOk, handleCurrentLocationError);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"weater\",\n    children: city ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [temperature, \", \", weather, \" in \", city]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Weather, \"9AzwyINw7GAEVjmtz51FNpj9p3Q=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/Users/hojunhwang/Documents/gitfth/learning_react/todolist/src/Weather/Weather.js"],"names":["React","useState","Weather","city","setCity","weather","setWeather","temperature","setTemperature","handleCurrentLocationOk","position","latitude","coords","longitude","API_KEY","url","fetch","then","response","json","data","name","sys","country","main","temp","handleCurrentLocationError","alert","navigator","geolocation","getCurrentPosition"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;;AAEA,WAASQ,uBAAT,CAAiCC,QAAjC,EAA2C;AACzC,UAAMC,QAAQ,GAAGD,QAAQ,CAACE,MAAT,CAAgBD,QAAjC;AACA,UAAME,SAAS,GAAGH,QAAQ,CAACE,MAAT,CAAgBC,SAAlC;AAEA,UAAMC,OAAO,GAAG,kCAAhB;AACA,UAAMC,GAAG,GAAI,uDAAsDJ,QAAS,QAAOE,SAAU,UAASC,OAAQ,eAA9G;AAEAE,IAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACdhB,MAAAA,OAAO,CAAE,GAAEgB,IAAI,CAACC,IAAK,KAAID,IAAI,CAACE,GAAL,CAASC,OAAQ,EAAnC,CAAP;AACAjB,MAAAA,UAAU,CAAE,GAAEc,IAAI,CAACf,OAAL,CAAa,CAAb,EAAgBmB,IAAK,EAAzB,CAAV;AACAhB,MAAAA,cAAc,CAAE,GAAEY,IAAI,CAACI,IAAL,CAAUC,IAAK,EAAnB,CAAd;AACD,KANH;AAOD;;AAED,WAASC,0BAAT,GAAsC;AACpCC,IAAAA,KAAK,CAAC,qCAAD,CAAL;AACD;;AAEDC,EAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACErB,uBADF,EAEEiB,0BAFF;AAKA,sBACE;AAAK,IAAA,EAAE,EAAC,QAAR;AAAA,cACGvB,IAAI,gBACH;AAAA,iBACGI,WADH,QACkBF,OADlB,UAC+BF,IAD/B;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,GAID;AALN;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAvCQD,O;;KAAAA,O;AAyCT,eAAeA,OAAf","sourcesContent":["import React, { useState } from \"react\";\n\nfunction Weather() {\n  const [city, setCity] = useState(\"\");\n  const [weather, setWeather] = useState(\"\");\n  const [temperature, setTemperature] = useState(\"\");\n\n  function handleCurrentLocationOk(position) {\n    const latitude = position.coords.latitude;\n    const longitude = position.coords.longitude;\n\n    const API_KEY = \"f7fe21bbdb94774cf7eff66143dc833d\";\n    const url = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${API_KEY}&units=metric`;\n\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setCity(`${data.name}, ${data.sys.country}`);\n        setWeather(`${data.weather[0].main}`);\n        setTemperature(`${data.main.temp}`);\n      });\n  }\n\n  function handleCurrentLocationError() {\n    alert(\"Can't find you. No weather for you.\");\n  }\n\n  navigator.geolocation.getCurrentPosition(\n    handleCurrentLocationOk,\n    handleCurrentLocationError\n  );\n\n  return (\n    <div id=\"weater\">\n      {city ? (\n        <span>\n          {temperature}, {weather} in {city}\n        </span>\n      ) : null}\n    </div>\n  );\n}\n\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}