{"ast":null,"code":"var _jsxFileName = \"/Users/hojunhwang/Documents/gitfth/learning_react/todolist/src/Weather/Weather.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Weather() {\n  function handleCurrentLocationOk(position) {\n    const latitude = position.coords.latitude;\n    const longitude = position.coords.longitude;\n    const API_KEY = \"f7fe21bbdb94774cf7eff66143dc833d\";\n    const url = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${API_KEY}&units=metric`;\n    let city = \"\";\n    let weather = \"\";\n    let temperature = \"\";\n    fetch(url).then(response => response.json()).then(data => {\n      city = `${data.name}, ${data.sys.country}`;\n      weather = `${data.weather[0].main}`;\n      temperature = `${data.main.temp}`;\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [temperature, \", \", weather, \" in \", city]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n  function handleCurrentLocationError() {\n    alert(\"Can't find you. No weather for you.\");\n  }\n\n  navigator.geolocation.getCurrentPosition(handleCurrentLocationOk, handleCurrentLocationError);\n}\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/Users/hojunhwang/Documents/gitfth/learning_react/todolist/src/Weather/Weather.js"],"names":["React","Weather","handleCurrentLocationOk","position","latitude","coords","longitude","API_KEY","url","city","weather","temperature","fetch","then","response","json","data","name","sys","country","main","temp","handleCurrentLocationError","alert","navigator","geolocation","getCurrentPosition"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,OAAT,GAAmB;AACjB,WAASC,uBAAT,CAAiCC,QAAjC,EAA2C;AACzC,UAAMC,QAAQ,GAAGD,QAAQ,CAACE,MAAT,CAAgBD,QAAjC;AACA,UAAME,SAAS,GAAGH,QAAQ,CAACE,MAAT,CAAgBC,SAAlC;AAEA,UAAMC,OAAO,GAAG,kCAAhB;AACA,UAAMC,GAAG,GAAI,uDAAsDJ,QAAS,QAAOE,SAAU,UAASC,OAAQ,eAA9G;AACA,QAAIE,IAAI,GAAG,EAAX;AACA,QAAIC,OAAO,GAAG,EAAd;AACA,QAAIC,WAAW,GAAG,EAAlB;AACAC,IAAAA,KAAK,CAACJ,GAAD,CAAL,CACGK,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACdP,MAAAA,IAAI,GAAI,GAAEO,IAAI,CAACC,IAAK,KAAID,IAAI,CAACE,GAAL,CAASC,OAAQ,EAAzC;AACAT,MAAAA,OAAO,GAAI,GAAEM,IAAI,CAACN,OAAL,CAAa,CAAb,EAAgBU,IAAK,EAAlC;AACAT,MAAAA,WAAW,GAAI,GAAEK,IAAI,CAACI,IAAL,CAAUC,IAAK,EAAhC;AACD,KANH;AAOA,wBACE;AAAA,6BACE;AAAA,mBACGV,WADH,QACkBD,OADlB,UAC+BD,IAD/B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAED,WAASa,0BAAT,GAAsC;AACpCC,IAAAA,KAAK,CAAC,qCAAD,CAAL;AACD;;AAEDC,EAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACExB,uBADF,EAEEoB,0BAFF;AAID;;KAlCQrB,O;AAoCT,eAAeA,OAAf","sourcesContent":["import React from \"react\";\n\nfunction Weather() {\n  function handleCurrentLocationOk(position) {\n    const latitude = position.coords.latitude;\n    const longitude = position.coords.longitude;\n\n    const API_KEY = \"f7fe21bbdb94774cf7eff66143dc833d\";\n    const url = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${API_KEY}&units=metric`;\n    let city = \"\";\n    let weather = \"\";\n    let temperature = \"\";\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        city = `${data.name}, ${data.sys.country}`;\n        weather = `${data.weather[0].main}`;\n        temperature = `${data.main.temp}`;\n      });\n    return (\n      <div>\n        <span>\n          {temperature}, {weather} in {city}\n        </span>\n      </div>\n    );\n  }\n\n  function handleCurrentLocationError() {\n    alert(\"Can't find you. No weather for you.\");\n  }\n\n  navigator.geolocation.getCurrentPosition(\n    handleCurrentLocationOk,\n    handleCurrentLocationError\n  );\n}\n\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}