{"ast":null,"code":"var _jsxFileName = \"/Users/hojunhwang/Documents/gitfth/learning_react/todolist/src/TodoList/TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport TodoLists from \"./TodoLists\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList() {\n  _s();\n\n  const [todos, setTodos] = useState(() => JSON.parse(localStorage.getItem(\"todos\")) || []);\n  const [input, setInput] = useState(\"\");\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  function saveTodos(todos) {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }\n\n  function deleteTodo(e) {\n    console.log(e.target.parentNode.id);\n    const id = e.target.parentNode.id;\n    setTodos(todos.filter(todo => todo.id !== id));\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }\n\n  function handleTodoSubmit(newTodo) {\n    e.preventDefault();\n    console.log(newTodo);\n    const newTodoObj = {\n      id: String(Date.now()),\n      todo: newTodo\n    };\n    setTodos([...todos, newTodoObj]);\n    saveTodos(todos); //  // Through this code, I shoud be able to remove the content of the input,\n    // but it does not work. I don't know why. probably, we should put this function on a button after making a button?\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"todo-input\",\n        type: \"text\",\n        placeholder: \"Write What to do and Press Enter.\",\n        required: true,\n        onChange: e => setInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onSubmit: e => {\n          e.preventDefault();\n          handleTodoSubmit(e);\n        },\n        children: \"send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoLists, {\n      todos: todos,\n      deleteTodo: deleteTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoList, \"IL4UXYqnIkLhztWusEwgFT1zmEs=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/hojunhwang/Documents/gitfth/learning_react/todolist/src/TodoList/TodoList.js"],"names":["React","useState","useEffect","TodoLists","TodoList","todos","setTodos","JSON","parse","localStorage","getItem","input","setInput","setItem","stringify","saveTodos","deleteTodo","e","console","log","target","parentNode","id","filter","todo","handleTodoSubmit","newTodo","preventDefault","newTodoObj","String","Date","now","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAChC,MAAMM,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,KAA6C,EADnB,CAAlC;AAGA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,YAAY,CAACI,OAAb,CAAqB,OAArB,EAA8BN,IAAI,CAACO,SAAL,CAAeT,KAAf,CAA9B;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;AAIA,WAASU,SAAT,CAAmBV,KAAnB,EAA0B;AACxBI,IAAAA,YAAY,CAACI,OAAb,CAAqB,OAArB,EAA8BN,IAAI,CAACO,SAAL,CAAeT,KAAf,CAA9B;AACD;;AAED,WAASW,UAAT,CAAoBC,CAApB,EAAuB;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,UAAT,CAAoBC,EAAhC;AACA,UAAMA,EAAE,GAAGL,CAAC,CAACG,MAAF,CAASC,UAAT,CAAoBC,EAA/B;AACAhB,IAAAA,QAAQ,CAACD,KAAK,CAACkB,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACF,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACAb,IAAAA,YAAY,CAACI,OAAb,CAAqB,OAArB,EAA8BN,IAAI,CAACO,SAAL,CAAeT,KAAf,CAA9B;AACD;;AAED,WAASoB,gBAAT,CAA0BC,OAA1B,EAAmC;AACjCT,IAAAA,CAAC,CAACU,cAAF;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAYO,OAAZ;AACA,UAAME,UAAU,GAAG;AAAEN,MAAAA,EAAE,EAAEO,MAAM,CAACC,IAAI,CAACC,GAAL,EAAD,CAAZ;AAA0BP,MAAAA,IAAI,EAAEE;AAAhC,KAAnB;AACApB,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWuB,UAAX,CAAD,CAAR;AACAb,IAAAA,SAAS,CAACV,KAAD,CAAT,CALiC,CAMjC;AACA;AACD;;AAED,sBACE;AAAA,4BACE;AAAA,8BACE;AACE,QAAA,EAAE,EAAC,YADL;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,WAAW,EAAC,mCAHd;AAIE,QAAA,QAAQ,MAJV;AAKE,QAAA,QAAQ,EAAGY,CAAD,IAAOL,QAAQ,CAACK,CAAC,CAACG,MAAF,CAASY,KAAV;AAL3B;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AACE,QAAA,QAAQ,EAAGf,CAAD,IAAO;AACfA,UAAAA,CAAC,CAACU,cAAF;AACAF,UAAAA,gBAAgB,CAACR,CAAD,CAAhB;AACD,SAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAmBE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEZ,KAAlB;AAAyB,MAAA,UAAU,EAAEW;AAArC;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GAtDQZ,Q;;KAAAA,Q;AAwDT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport TodoLists from \"./TodoLists\";\n\nfunction TodoList() {\n  const [todos, setTodos] = useState(\n    () => JSON.parse(localStorage.getItem(\"todos\")) || []\n  );\n  const [input, setInput] = useState(\"\");\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  function saveTodos(todos) {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }\n\n  function deleteTodo(e) {\n    console.log(e.target.parentNode.id);\n    const id = e.target.parentNode.id;\n    setTodos(todos.filter((todo) => todo.id !== id));\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }\n\n  function handleTodoSubmit(newTodo) {\n    e.preventDefault();\n    console.log(newTodo);\n    const newTodoObj = { id: String(Date.now()), todo: newTodo };\n    setTodos([...todos, newTodoObj]);\n    saveTodos(todos);\n    //  // Through this code, I shoud be able to remove the content of the input,\n    // but it does not work. I don't know why. probably, we should put this function on a button after making a button?\n  }\n\n  return (\n    <div>\n      <form>\n        <input\n          id=\"todo-input\"\n          type=\"text\"\n          placeholder=\"Write What to do and Press Enter.\"\n          required\n          onChange={(e) => setInput(e.target.value)}\n        />\n        <button\n          onSubmit={(e) => {\n            e.preventDefault();\n            handleTodoSubmit(e);\n          }}\n        >\n          send\n        </button>\n      </form>\n\n      <TodoLists todos={todos} deleteTodo={deleteTodo} />\n    </div>\n  );\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}