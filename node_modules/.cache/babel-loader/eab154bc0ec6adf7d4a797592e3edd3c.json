{"ast":null,"code":"import _toConsumableArray from\"/Users/hojunhwang/Documents/gitfth/learning_react/todolist/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/hojunhwang/Documents/gitfth/learning_react/todolist/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import TodoLists from\"./TodoLists\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function TodoList(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),todos=_useState2[0],setTodos=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),input=_useState4[0],setInput=_useState4[1];function saveTodos(){localStorage.setItem(\"todos\",JSON.stringify(todos));}function deleteTodo(e){console.log(e.target.parentNode.id);var id=e.target.parentNode.id;setTodos(todos.filter(function(todo){return todo.id!==id;}));localStorage.setItem(\"todos\",JSON.stringify(todos));}function handleTodoSubmit(newTodo){var newTodoObj={id:String(Date.now()),todo:newTodo};setTodos([].concat(_toConsumableArray(todos),[newTodoObj]));saveTodos();// setInput(\"\"); // Through this code, I shoud be able to remove the content of the input,\n// but it does not work. I don't know why. probably, we should put this function on a button after making a button?\n}var savedTodos=localStorage.getItem(\"todos\");if(savedTodos!==null){var parsedTodos=JSON.parse(savedTodos);todos=parsedTodos;}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"form\",{onSubmit:function onSubmit(e){e.preventDefault();handleTodoSubmit(input);},children:/*#__PURE__*/_jsx(\"input\",{id:\"todo-input\",type:\"text\",placeholder:\"Write What to do and Press Enter.\",required:true,onChange:function onChange(e){return setInput(e.target.value);}})}),/*#__PURE__*/_jsx(TodoLists,{todos:todos,deleteTodo:deleteTodo})]});}export default TodoList;","map":{"version":3,"sources":["/Users/hojunhwang/Documents/gitfth/learning_react/todolist/src/TodoList/TodoList.js"],"names":["React","useState","TodoLists","TodoList","todos","setTodos","input","setInput","saveTodos","localStorage","setItem","JSON","stringify","deleteTodo","e","console","log","target","parentNode","id","filter","todo","handleTodoSubmit","newTodo","newTodoObj","String","Date","now","savedTodos","getItem","parsedTodos","parse","preventDefault","value"],"mappings":"0WAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,C,wFAEA,QAASC,CAAAA,QAAT,EAAoB,CAClB,cAAwBF,QAAQ,CAAC,EAAD,CAAhC,wCAAKG,KAAL,eAAYC,QAAZ,eACA,eAA0BJ,QAAQ,CAAC,EAAD,CAAlC,yCAAOK,KAAP,eAAcC,QAAd,eAEA,QAASC,CAAAA,SAAT,EAAqB,CACnBC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8BC,IAAI,CAACC,SAAL,CAAeR,KAAf,CAA9B,EACD,CAED,QAASS,CAAAA,UAAT,CAAoBC,CAApB,CAAuB,CACrBC,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,UAAT,CAAoBC,EAAhC,EACA,GAAMA,CAAAA,EAAE,CAAGL,CAAC,CAACG,MAAF,CAASC,UAAT,CAAoBC,EAA/B,CACAd,QAAQ,CAACD,KAAK,CAACgB,MAAN,CAAa,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACF,EAAL,GAAYA,EAAtB,EAAb,CAAD,CAAR,CACAV,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8BC,IAAI,CAACC,SAAL,CAAeR,KAAf,CAA9B,EACD,CAED,QAASkB,CAAAA,gBAAT,CAA0BC,OAA1B,CAAmC,CACjC,GAAMC,CAAAA,UAAU,CAAG,CAAEL,EAAE,CAAEM,MAAM,CAACC,IAAI,CAACC,GAAL,EAAD,CAAZ,CAA0BN,IAAI,CAAEE,OAAhC,CAAnB,CACAlB,QAAQ,8BAAKD,KAAL,GAAYoB,UAAZ,GAAR,CACAhB,SAAS,GACT;AACA;AACD,CACD,GAAMoB,CAAAA,UAAU,CAAGnB,YAAY,CAACoB,OAAb,CAAqB,OAArB,CAAnB,CACA,GAAID,UAAU,GAAK,IAAnB,CAAyB,CACvB,GAAME,CAAAA,WAAW,CAAGnB,IAAI,CAACoB,KAAL,CAAWH,UAAX,CAApB,CACAxB,KAAK,CAAG0B,WAAR,CACD,CAED,mBACE,oCACE,aACE,QAAQ,CAAE,kBAAChB,CAAD,CAAO,CACfA,CAAC,CAACkB,cAAF,GACAV,gBAAgB,CAAChB,KAAD,CAAhB,CACD,CAJH,uBAME,cACE,EAAE,CAAC,YADL,CAEE,IAAI,CAAC,MAFP,CAGE,WAAW,CAAC,mCAHd,CAIE,QAAQ,KAJV,CAKE,QAAQ,CAAE,kBAACQ,CAAD,QAAOP,CAAAA,QAAQ,CAACO,CAAC,CAACG,MAAF,CAASgB,KAAV,CAAf,EALZ,EANF,EADF,cAgBE,KAAC,SAAD,EAAW,KAAK,CAAE7B,KAAlB,CAAyB,UAAU,CAAES,UAArC,EAhBF,GADF,CAoBD,CAED,cAAeV,CAAAA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport TodoLists from \"./TodoLists\";\n\nfunction TodoList() {\n  let [todos, setTodos] = useState([]);\n  const [input, setInput] = useState(\"\");\n\n  function saveTodos() {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }\n\n  function deleteTodo(e) {\n    console.log(e.target.parentNode.id);\n    const id = e.target.parentNode.id;\n    setTodos(todos.filter((todo) => todo.id !== id));\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }\n\n  function handleTodoSubmit(newTodo) {\n    const newTodoObj = { id: String(Date.now()), todo: newTodo };\n    setTodos([...todos, newTodoObj]);\n    saveTodos();\n    // setInput(\"\"); // Through this code, I shoud be able to remove the content of the input,\n    // but it does not work. I don't know why. probably, we should put this function on a button after making a button?\n  }\n  const savedTodos = localStorage.getItem(\"todos\");\n  if (savedTodos !== null) {\n    const parsedTodos = JSON.parse(savedTodos);\n    todos = parsedTodos;\n  }\n\n  return (\n    <div>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          handleTodoSubmit(input);\n        }}\n      >\n        <input\n          id=\"todo-input\"\n          type=\"text\"\n          placeholder=\"Write What to do and Press Enter.\"\n          required\n          onChange={(e) => setInput(e.target.value)}\n        />\n      </form>\n\n      <TodoLists todos={todos} deleteTodo={deleteTodo} />\n    </div>\n  );\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}